syntax = "proto3";

package formation_rpc;

service FormationRpc {
    rpc Join (JoinRequest) returns (JoinResponse);
    rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse);
    rpc QuorumGossip (QuorumGossipRequest) returns (QuorumGossipResponse);
    rpc NetworkGossip (NetworkGossipRequest) returns (NetworkGossipResponse);
    rpc DirectMessage (DirectedMessageRequest) returns (DirectedMessageResponse);
    rpc UserRequest (UserRequestMessage) returns (UserResponse);
}

enum RequestType {
    LAUNCH = 0;
    START = 1;
    STOP = 2;
    DELETE = 3;
    SCALE = 4;
    REPLICATE = 5; 
    EXPORT = 6;
    METRICS = 7;
    STATUS = 8;
    ELECTION = 9;
}

enum DirectMessage {
    PEERS = 0;
    INSTANCES = 1;
}

enum RequestStatus {
    PENDING = 0;
    SUCCESS = 1;
    FAILURE = 2;
}

message MessageHeader {
    string peer_id = 1;
    string peer_address = 2;
    string message_id = 3;
}

message JoinRequest {
    MessageHeader header = 1;
    string new_peer_id = 2;
    string new_peer_address = 3;
    string new_peer_signature = 4;
    uint32 new_peer_recovery_id = 5;
    optional string sender_signature = 6;
    optional uint32 sender_recovery_id = 7;
    bool forwarded = 8;
}

message JoinResponse {
    MessageHeader header = 1;
    bool ack = 2;
    string sig = 3;
    uint32 recovery_id = 4;
    string original_message_id = 5;
}

message HeartbeatRequest {
    MessageHeader header = 1;
    string timestamp = 2;
    string sig = 3;
    uint32 recovery_id = 4;
}

message HeartbeatResponse {
    MessageHeader header = 1;
    bool ack = 2;
    string sig = 3;
    uint32 recovery_id = 4;
    string original_message_id = 5;
}

message QuorumGossipRequest {
    MessageHeader header = 1;
    string timestamp = 2;
    string sig = 3;
    uint32 recovery_id = 4;
    RequestType request_type = 5;
    string payload = 6;
}

message QuorumGossipResponse {
    MessageHeader header = 1;
    bool ack = 2;
    string sig = 3;
    uint32 recovery_id = 4;
    string original_message_id = 5;
}

message NetworkGossipRequest {
    MessageHeader header = 1;
    string timestamp = 2;
    string sig = 3;
    uint32 recovery_id = 4;
    RequestType request_type = 5;
    string payload = 6;
}

message NetworkGossipResponse {
    MessageHeader header = 1;
    bool ack = 2;
    string sig = 3;
    uint32 recovery_id = 4;
    string original_message_id = 5;
}

message DirectedMessageRequest {
    MessageHeader header = 1;
    string timestamp = 2;
    string sig = 3;
    uint32 recovery_id = 4;
    DirectMessage message_type = 5;
    string payload = 6;
}

message DirectedMessageResponse {
    MessageHeader header = 1;
    bool ack = 2;
    string sig = 3;
    uint32 recovery_id = 4;
    string original_message_id = 5;
}

message UserRequestMessage {
    string sig = 1;
    uint32 recovery_id = 2;
    string  message_id = 3;
    string timestamp = 4;
    RequestType request_type = 5;
    string payload = 6;
}

message UserResponse {
    MessageHeader header = 1;
    bool ack = 2;
    RequestStatus status = 3;
    string sig = 4;
    uint32 recovery_id = 5;
    string original_message_id = 6;
    optional string failure_reason = 7;
}
